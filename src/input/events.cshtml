Title: Events
---
<div data-event-date="2021-11-11" class="card mt-3 bt-3">
  <div class="card-body">
    <h1 class="card-title mb-1">Micro API Design with Consume 1st - Llewellyn Falco</h1>
    <h5 class="card-subtitle text-muted mb-2">Thursday, November 11th, 2021</h5>

   <img src="assets/images/LlewellynFalco.jpg" class="rounded float-left pr-3 pb-3" alt="Portrait of Kaleb Pederson">

    <p>
      Letâ€™s get back to basics.
    </p>

    <p>
      One of the microskills often used in TDD is Consume First Architecture, which simply means using the fields and
      methods before they exist. Sounds easy? Well yes and no. Even simple lines of code can have HUGE implications on your
      architecture. The real skill in consume first is to be able to see, question and respond to those implications on sight.
    </p>

    <p>
      Tonight, we are going to geek out over a single line of code. We will take it and turn it into 40-50 variations 
      and explore how each variable impacts the resulting design.
    </p>
    
    <em>About the Speaker</em>

    <p>
      Llewellyn Falco is an independent agile coach. He discovered strong-style pair programming. He is the creator
      of the open-source testing tool ApprovalTests (<a href="https://approvaltests.com/">www.approvaltests.com</a>). 
      He spends most of his time programming in Java and C# specializing in improving legacy code. He is the co-founder 
      of <a href="https://TeachingKidsProgramming.org/">TeachingKidsProgramming.org</a> & co-author of Mob Programming 
      Guidebook.
    </p>

    <h2>Venue</h2>

    <p>This event is being <a href="https://us02web.zoom.us/j/88404796598">hosted online</a>.</p>

  </div>
</div>

@section Scripts {
<script>
  // filter out events that have already passed
  $('*[data-event-date]').each(function(ix) {
    var date_str = $(this).attr('data-event-date');
    var event_date = new Date(date_str);
    // remove the event a couple of days after
    var day_after_event = new Date(event_date.valueOf() + 86400000*2);
    var now = new Date();
    now.setHours(0,0,0,0);
    if (day_after_event <= now) {
      $(this).hide();
    }
  });
</script>
}
